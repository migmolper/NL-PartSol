# -*- makefile -*- #
# configuration directories:

ZLIB_BASE_DIR = $(HOME)
HDF5_BASE_DIR = $(HOME)

GIDPOST_DIR=../source

# ifeq ($(USER),miguel)
   GID_SOURCE_DIR = ../../../gid
# else
#   GID_SOURCE_DIR = ../../Sources
# endif

# defines CPPFLAGS_OPT CFLAGS_OPT LFLAGS_OPT and FOPENMP
include $(GID_SOURCE_DIR)/make_opt_flags.mk

# end configuration

EXES =			\
ex1_sphere.exe		\
ex1_sphere_fd.exe	\
testpost.exe      	\
testpost_fd.exe

EXE_F = testpostfor.exe 

GID_INDEX_EXE = gidzran.exe

#testpostf90.exe

SOURCES = ${EXES:.exe=.c}

GIDPOST_SOURCES = \
gidpost.c         \
gidpostHash.c 	  \
gidpostHDF5.c 	  \
gidpostInt.c 	  \
hashtab.c 	  \
hdf5c.c 	  \
lookupa.c         \
recycle.c

GIDPOST_F_SOURCES = 	\
gidpostforAPI.c   	\
gidpostfor.c

GID_INDEX_SOURCES = gid_zran_ap_list.cc gid_zran_file.cc gid_zran_index.cc

GIDPOST_FULL_SOURCES = ${GIDPOST_SOURCES:%=$(GIDPOST_DIR)/%}
GIDPOST_FULL_F_SOURCES = ${GIDPOST_F_SOURCES:%=$(GIDPOST_DIR)/%}
GID_INDEX_FULL_SOURCES = ${GID_INDEX_SOURCES:%=$(GID_SOURCE_DIR)/Post/%} $(GID_SOURCE_DIR)/crc.c

MACHINE = $(shell gcc -dumpmachine)
ifeq ($(findstring x86_64,$(MACHINE)),x86_64)
  LFS_SUPPORT = 
else
  LFS_SUPPORT = -D_LARGEFILE64_SOURCE=1 -D_LFS64_LARGEFILE=1 -D_FILE_OFFSET_BITS=64
endif

DEFINES = -DHAVE_GIDPOST_CONFIG_H -DUSE_TCL_STUBS -DTCLVERSION 
# FLAGS = -O2
FLAGS = $(CPPFLAGS_OPT) $(LFS_SUPPORT)
# FLAGS = -g -pedantic -Wextra -Wreturn-type -Wswitch -Wformat \
# 	-Wcast-align -Wconversion -Wcomment \
# 	-Wmissing-braces \
# 	-Wno-long-long -Wno-ignored-qualifiers -Wno-variadic-macros \
# 	-Wno-char-subscripts
INCLUDES = -I. -I$(GIDPOST_DIR) -I$(HDF5_BASE_DIR)/include -I$(ZLIB_BASE_DIR)/include -I..
LIBS = -L$(HDF5_BASE_DIR)/lib -L$(ZLIB_BASE_DIR)/lib -lhdf5_hl -lhdf5 -lz -lm

GID_INDEX_FLAGS = -Wall -Wextra -pedantic -Wextra -Wreturn-type -Wswitch \
	-Wformat -Wcast-align -Wconversion -Wcomment -Wmissing-braces \
	-Wno-long-long -Wno-ignored-qualifiers -DGID_ZRAN_ALONE \
	-I$(ZLIB_BASE_DIR)/include -I$(GID_SOURCE_DIR) -I$(GID_SOURCE_DIR)/Post \
	$(CPPFLAGS_OPT) $(LFS_SUPPORT) \
	-lm -lz

all: $(GID_INDEX_EXE) $(EXES) $(EXE_F)

testpostfor.exe: testpostfor.f
	$(CC) -c $(GIDPOST_FULL_SOURCES) $(GIDPOST_FULL_F_SOURCES) $(FLAGS) $(INCLUDES)
	gfortran -o $@ $< *.o $(FLAGS) $(INCLUDES) $(LIBS)
	rm *.o

testpostf90.exe: testpost.f90
	$(CC) -c $(GIDPOST_FULL_SOURCES) $(GIDPOST_FULL_F_SOURCES) $(FLAGS) $(INCLUDES)
	gfortran -o $@ $< *.o $(FLAGS) $(INCLUDES) $(LIBS)
	rm *.o

$(GID_INDEX_EXE): $(GID_INDEX_FULL_SOURCES)
	g++ -o $@ $^ $(GID_INDEX_FLAGS)
	echo $(GID_INDEX_EXE) created.

.SUFFIXES : .exe .c

%.exe : %.c
	$(CC) -o $@ $< $(FLAGS) $(INCLUDES) $(GIDPOST_FULL_SOURCES) $(LIBS)

clean:
	rm -f $(EXES) $(EXE_F) $(GID_INDEX_EXE)
	rm -f *.post.bin *.post.msh *.post.res

run:
	for fexe in $(EXES) $(EXE_F); do                    \
		( echo running ./$$fexe ; ./$$fexe ;)       \
	done
